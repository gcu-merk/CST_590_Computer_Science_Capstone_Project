services:
  traffic-monitor:
    image: gcumerk/cst590-capstone-public:latest
    container_name: traffic-monitoring-edge
    restart: unless-stopped

    # Hardware access (removed direct camera devices - using host-capture architecture)
    devices:
      # - /dev/ttyACM0:/dev/ttyACM0  # Radar sensor access (commented out - device not available)
      - /dev/gpiomem0:/dev/gpiomem  # GPIO access (using gpiomem0)
      # Camera devices removed - using shared volume image capture instead
      # - /dev/video0:/dev/video0    # Removed: OpenCV compatibility issues with IMX500
      # - /dev/video1:/dev/video1    # Removed: Not needed with host-capture
      # - /dev/vchiq:/dev/vchiq      # Removed: VideoCore not needed in container
      # - /dev/vcsm:/dev/vcsm        # Removed: VideoCore shared memory not needed

    # Reduced privilege - camera access through shared volume only
    privileged: false
    
    # Add specific capabilities instead of full privileged mode
    cap_add:
      - NET_ADMIN  # For network monitoring if needed
      - SYS_TIME   # For time synchronization

    # Expose API on host (for Tailscale/external access)
    ports:
      - "5000:5000"

    # Volume mounts for persistent data and shared image capture (ALL ON SSD)
    volumes:
      - ./data:/app/data
      - /mnt/storage/logs/docker:/app/logs  # Docker logs on SSD
      - ./config:/app/config
      # Shared volume for host-captured images (main change)
      - /mnt/storage/camera_capture:/app/data/camera_capture
      - /mnt/storage/periodic_snapshots:/mnt/storage/periodic_snapshots
      - /mnt/storage/ai_camera_images:/mnt/storage/ai_camera_images
      # Additional SSD storage mounts
      - /mnt/storage/processed_data:/app/data/processed
      - /mnt/storage/backups:/app/data/backups

    # Container logging configuration (logs to SSD)
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        
    # Environment variables
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      # Removed display and camera-specific variables
      # - DISPLAY=:0  # Removed: No GUI needed in container
      # - LIBCAMERA_LOG_LEVELS=ERROR  # Removed: No direct camera access
      # - IMX500_MODEL_PATH=/usr/share/imx500-models/imx500_network_ssd_mobilenetv2_fpnlite_320x320_pp.rpk  # Removed: Host handles IMX500
      
      # SSD-based storage paths
      - CAMERA_CAPTURE_DIR=/app/data/camera_capture
      - USE_SHARED_VOLUME_IMAGES=true
      - HOST_CAPTURE_ARCHITECTURE=true
      - LOG_DIRECTORY=/app/logs  # Logs stored on SSD
      
      # Legacy paths for compatibility (all on SSD)
      - PERIODIC_SNAPSHOT_PATH=/mnt/storage/periodic_snapshots
      - SNAPSHOT_INTERVAL_MINUTES=5
      - DETECTION_SAVE_PATH=/mnt/storage/ai_camera_images
      - PROCESSED_DATA_PATH=/app/data/processed
      - BACKUP_PATH=/app/data/backups
      
      # Data maintenance configuration
      - DATA_VOLUME=/mnt/storage
      - MAINTENANCE_IMAGE_MAX_AGE_HOURS=24
      - MAINTENANCE_SNAPSHOT_MAX_AGE_HOURS=168
      - MAINTENANCE_PROCESSED_MAX_AGE_HOURS=48
      - MAINTENANCE_LOG_MAX_AGE_DAYS=30
      - MAINTENANCE_LOG_MAX_SIZE_MB=50
      - MAINTENANCE_EMERGENCY_THRESHOLD=90
      - MAINTENANCE_WARNING_THRESHOLD=80
      - MAINTENANCE_MAX_LIVE_IMAGES=500
      - MAINTENANCE_MAX_PROCESSED_IMAGES=200
      - MAINTENANCE_MAX_SNAPSHOTS=100
      - ENABLE_AUTO_MAINTENANCE=true

    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  # Automated Data Maintenance Service
  data-maintenance:
    image: gcumerk/cst590-capstone-public:latest
    container_name: traffic-maintenance
    restart: unless-stopped
    
    # Run maintenance as separate service
    command: ["python3", "/app/scripts/container-maintenance.py", "--daemon"]
    
    # Only need access to storage volumes
    volumes:
      - /mnt/storage:/mnt/storage  # Full SSD access for maintenance
      - ./scripts:/app/scripts     # Maintenance scripts
      - ./config:/app/config       # Configuration files
    
    # Minimal environment for maintenance
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - DATA_VOLUME=/mnt/storage
      - MAINTENANCE_IMAGE_MAX_AGE_HOURS=24
      - MAINTENANCE_SNAPSHOT_MAX_AGE_HOURS=168
      - MAINTENANCE_PROCESSED_MAX_AGE_HOURS=48
      - MAINTENANCE_LOG_MAX_AGE_DAYS=30
      - MAINTENANCE_LOG_MAX_SIZE_MB=50
      - MAINTENANCE_EMERGENCY_THRESHOLD=90
      - MAINTENANCE_WARNING_THRESHOLD=80
      - MAINTENANCE_MAX_LIVE_IMAGES=500
      - MAINTENANCE_MAX_PROCESSED_IMAGES=200
      - MAINTENANCE_MAX_SNAPSHOTS=100
    
    # Maintenance service health check
    healthcheck:
      test: ["CMD", "python3", "/app/scripts/container-maintenance.py", "--status"]
      interval: 300s  # Every 5 minutes
      timeout: 30s
      retries: 3
      start_period: 60s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

# Optional: Add database service for more complex setups
  # database:
  #   image: postgres:15-alpine
  #   container_name: traffic-db
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: traffic_monitor
  #     POSTGRES_USER: traffic_user
  #     POSTGRES_PASSWORD: secure_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./database/init_db.sql:/docker-entrypoint-initdb.d/init.sql
  #   ports:
  #     - "5432:5432"

# Optional: Add cloud connector service
  # cloud-connector:
  #   build: ./cloud-connector
  #   container_name: cloud-connector
  #   restart: unless-stopped
  #   depends_on:
  #     - traffic-monitor
  #   environment:
  #     - EDGE_API_URL=http://traffic-monitor:5000
  #     - CLOUD_ENDPOINT=https://your-cloud-service.com

volumes:
  # All persistent data stored on SSD
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/storage/postgres_data

networks:
  default:
    name: traffic-monitoring-network